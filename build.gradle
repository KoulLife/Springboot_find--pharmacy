plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id	'groovy'	// groovy 추가
}

test {
	useJUnitPlatform()
}

group = 'JDI'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.3'

//	Spock Setting
	testImplementation 'org.spockframework:spock-core:2.4-M4-groovy-4.0'
	testImplementation 'org.spockframework:spock-spring:2.4-M4-groovy-4.0'

//	런타임 클래스 기반 Spock Mock 만들기 위해
	implementation 'net.bytebuddy:byte-buddy:1.15.5'

//	testcontainers
	testImplementation "org.testcontainers:spock:1.20.3"
	testImplementation "org.testcontainers:mariadb:1.20.3"

	// handlebars
	implementation 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.5.0'


	// spring retry
	implementation 'org.springframework.retry:spring-retry'

	// mockWebServer
	testImplementation('com.squareup.okhttp3:okhttp:4.10.0')
	testImplementation('com.squareup.okhttp3:mockwebserver:4.10.0')

}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar{
	archiveFileName = 'app.jar';
}